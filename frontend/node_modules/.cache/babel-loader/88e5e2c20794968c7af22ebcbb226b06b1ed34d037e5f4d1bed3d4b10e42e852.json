{"ast":null,"code":"var _jsxFileName = \"E:\\\\custom_form_builder\\\\frontend\\\\src\\\\components\\\\FormPreview.js\",\n  _s = $RefreshSig$();\n// frontend/src/components/FormPreview.js\nimport React, { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FormPreview = () => {\n  _s();\n  // State to store form data fetched from the backend\n  const [formData, setFormData] = useState([]);\n\n  // Function to fetch form data from the backend\n  useEffect(() => {\n    fetch('/api/forms').then(response => response.json()).then(data => {\n      setFormData(data);\n    }).catch(error => {\n      console.error('Error fetching form data:', error);\n    });\n  }, []);\n\n  // Implement the UI for form preview\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Form Preview\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), formData.map((form, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: form.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: form.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this), form.questions.map((question, qIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: question.content\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 15\n        }, this), question.image && /*#__PURE__*/_jsxDEV(\"img\", {\n          src: question.image,\n          alt: `Question ${qIndex + 1}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 34\n        }, this), question.type === 'categorization' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: question.choices.map((choice, cIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: `question-${qIndex}`,\n              value: choice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: choice\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 23\n            }, this)]\n          }, cIndex, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this), question.type === 'cloze' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: question.blank\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 17\n        }, this), question.type === 'comprehension' && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: `The ${question.color} fox is`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 17\n        }, this)]\n      }, qIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 13\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(FormPreview, \"lokSdkSLZfErX0cQNfNp9SJ3li8=\");\n_c = FormPreview;\nexport default FormPreview;\nvar _c;\n$RefreshReg$(_c, \"FormPreview\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","FormPreview","_s","formData","setFormData","fetch","then","response","json","data","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","map","form","index","title","description","questions","question","qIndex","content","image","src","alt","type","choices","choice","cIndex","name","value","placeholder","blank","color","_c","$RefreshReg$"],"sources":["E:/custom_form_builder/frontend/src/components/FormPreview.js"],"sourcesContent":["// frontend/src/components/FormPreview.js\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst FormPreview = () => {\r\n  // State to store form data fetched from the backend\r\n  const [formData, setFormData] = useState([]);\r\n\r\n  // Function to fetch form data from the backend\r\n  useEffect(() => {\r\n    fetch('/api/forms')\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        setFormData(data);\r\n      })\r\n      .catch((error) => {\r\n        console.error('Error fetching form data:', error);\r\n      });\r\n  }, []);\r\n\r\n  // Implement the UI for form preview\r\n  return (\r\n    <div>\r\n      <h2>Form Preview</h2>\r\n      {formData.map((form, index) => (\r\n        <div key={index}>\r\n          <h3>{form.title}</h3>\r\n          <p>{form.description}</p>\r\n          {/* Display questions based on their types */}\r\n          {form.questions.map((question, qIndex) => (\r\n            <div key={qIndex}>\r\n              <p>{question.content}</p>\r\n              {question.image && <img src={question.image} alt={`Question ${qIndex + 1}`} />}\r\n              {question.type === 'categorization' && (\r\n                <div>\r\n                  {/* Display categorization options */}\r\n                  {question.choices.map((choice, cIndex) => (\r\n                    <div key={cIndex}>\r\n                      <input type=\"radio\" name={`question-${qIndex}`} value={choice} />\r\n                      <label>{choice}</label>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              {question.type === 'cloze' && (\r\n                <div>\r\n                  {/* Display fill-in-the-blank input */}\r\n                  <input type=\"text\" placeholder={question.blank} />\r\n                </div>\r\n              )}\r\n              {question.type === 'comprehension' && (\r\n                <div>\r\n                  {/* Display comprehension question input */}\r\n                  <input type=\"text\" placeholder={`The ${question.color} fox is`} />\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FormPreview;\r\n"],"mappings":";;AAAA;AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;;EAE5C;EACAD,SAAS,CAAC,MAAM;IACdQ,KAAK,CAAC,YAAY,CAAC,CAChBC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC,CAAC,CAAC,CACnCF,IAAI,CAAEG,IAAI,IAAK;MACdL,WAAW,CAACK,IAAI,CAAC;IACnB,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,oBACEX,OAAA;IAAAa,QAAA,gBACEb,OAAA;MAAAa,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACpBd,QAAQ,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACxBpB,OAAA;MAAAa,QAAA,gBACEb,OAAA;QAAAa,QAAA,EAAKM,IAAI,CAACE;MAAK;QAAAP,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACrBjB,OAAA;QAAAa,QAAA,EAAIM,IAAI,CAACG;MAAW;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EAExBE,IAAI,CAACI,SAAS,CAACL,GAAG,CAAC,CAACM,QAAQ,EAAEC,MAAM,kBACnCzB,OAAA;QAAAa,QAAA,gBACEb,OAAA;UAAAa,QAAA,EAAIW,QAAQ,CAACE;QAAO;UAAAZ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EACxBO,QAAQ,CAACG,KAAK,iBAAI3B,OAAA;UAAK4B,GAAG,EAAEJ,QAAQ,CAACG,KAAM;UAACE,GAAG,EAAG,YAAWJ,MAAM,GAAG,CAAE;QAAE;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC7EO,QAAQ,CAACM,IAAI,KAAK,gBAAgB,iBACjC9B,OAAA;UAAAa,QAAA,EAEGW,QAAQ,CAACO,OAAO,CAACb,GAAG,CAAC,CAACc,MAAM,EAAEC,MAAM,kBACnCjC,OAAA;YAAAa,QAAA,gBACEb,OAAA;cAAO8B,IAAI,EAAC,OAAO;cAACI,IAAI,EAAG,YAAWT,MAAO,EAAE;cAACU,KAAK,EAAEH;YAAO;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACjEjB,OAAA;cAAAa,QAAA,EAAQmB;YAAM;cAAAlB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC;UAAA,GAFfgB,MAAM;YAAAnB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGX,CACN;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CACN,EACAO,QAAQ,CAACM,IAAI,KAAK,OAAO,iBACxB9B,OAAA;UAAAa,QAAA,eAEEb,OAAA;YAAO8B,IAAI,EAAC,MAAM;YAACM,WAAW,EAAEZ,QAAQ,CAACa;UAAM;YAAAvB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/C,CACN,EACAO,QAAQ,CAACM,IAAI,KAAK,eAAe,iBAChC9B,OAAA;UAAAa,QAAA,eAEEb,OAAA;YAAO8B,IAAI,EAAC,MAAM;YAACM,WAAW,EAAG,OAAMZ,QAAQ,CAACc,KAAM;UAAS;YAAAxB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC/D,CACN;MAAA,GAzBOQ,MAAM;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OA0BX,CACN,CAAC;IAAA,GAhCMG,KAAK;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAiCV,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACf,EAAA,CA1DID,WAAW;AAAAsC,EAAA,GAAXtC,WAAW;AA4DjB,eAAeA,WAAW;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}